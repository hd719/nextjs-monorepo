FROM node:20-alpine AS base

## Core dependency builder (pruned)
FROM base AS builder
RUN apk add --no-cache libc6-compat
RUN apk update
RUN corepack enable && corepack prepare pnpm@9 --activate
ENV PNPM_HOME=/usr/local/bin
RUN pnpm add turbo@2.1.0 --global
WORKDIR /app
COPY . .
RUN turbo prune --scope=cookbook --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
RUN apk update
RUN apk add --no-cache libc6-compat
WORKDIR /app
RUN corepack enable && corepack prepare pnpm@latest --activate
ENV PNPM_HOME=/usr/local/bin
RUN pnpm add turbo@2.1.0 --global

# First install the dependencies (as they change less often)
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
RUN pnpm install

# Build the project
COPY --from=builder /app/out/full/ .

# Uncomment and use build args to enable remote caching
# ARG TURBO_TEAM
# ENV TURBO_TEAM=$TURBO_TEAM

# ARG TURBO_TOKEN
# ENV TURBO_TOKEN=$TURBO_TOKEN
WORKDIR /app
RUN turbo build --filter=cookbook...

FROM base AS runner
WORKDIR /app

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=installer --chown=nextjs:nodejs /app/apps/cookbook/.next/standalone ./
COPY --from=installer --chown=nextjs:nodejs /app/apps/cookbook/.next/static ./apps/cookbook/.next/static
COPY --from=installer --chown=nextjs:nodejs /app/apps/cookbook/public ./apps/cookbook/public

CMD node apps/cookbook/server.js
